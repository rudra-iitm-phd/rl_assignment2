{'env': 'acrobot', 'algorithm': 'mc_reinforce', 'use_max': False, 'buffer_size': 100000, 'learning_rate': 0.001, 'value_learning_rate': 0.001, 'batch_size': 128, 'gamma': 0.99, 'update_period': 4, 'use_baseline': False, 'wandb_sweep': False, 'sweep_id': None, 'wandb_entity': 'da24d008-iit-madras', 'wandb_project': 'rl-assignment-2'}
Episode 100	Average Return: -926.56
Episode 200	Average Return: -914.95
Episode 300	Average Return: -860.81
Episode 400	Average Return: -847.51
Episode 500	Average Return: -918.24
Episode 600	Average Return: -872.38
Episode 700	Average Return: -913.76
Episode 800	Average Return: -943.69
Episode 900	Average Return: -938.30
Episode 975	Average Return: -976.64
Traceback (most recent call last):
  File "/Users/rudra_sarkar/Documents/PhD IIT Madras/Intro to RL DA6400/assignment2/main.py", line 35, in train
    train_fn(env, rl_agent, wandb)
  File "/Users/rudra_sarkar/Documents/PhD IIT Madras/Intro to RL DA6400/assignment2/trainer.py", line 62, in mc_trainer
    action = agent.act(state)
             ^^^^^^^^^^^^^^^^
  File "/Users/rudra_sarkar/Documents/PhD IIT Madras/Intro to RL DA6400/assignment2/agent.py", line 108, in act
    m = Categorical(probs)
        ^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/envs/rl_env/lib/python3.11/site-packages/torch/distributions/categorical.py", line 59, in __init__
    self.probs = probs / probs.sum(-1, keepdim=True)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
